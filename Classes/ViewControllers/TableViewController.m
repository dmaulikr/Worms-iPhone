#import "TableViewController.h"#import "MainMenuCell.h"#import "LateWormAppDelegate.h"#import "OpenALPlayer.h"#import "ProfileManager.h"@implementation TableViewController@synthesize delegate;#pragma mark -#pragma mark Life Cycle- (id)initWithStyle:(UITableViewStyle)style {    // Override initWithStyle: if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad.    if (self = [super initWithStyle:style]) {		self.tableView.contentInset = UIEdgeInsetsMake(5, 0, 135, 0);		self.tableView.backgroundColor = [UIColor colorWithRed:56/256.0 green:33/256.0 blue:12/256.0 alpha:1.0];		self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;		self.tableView.sectionHeaderHeight = 0.0;		self.tableView.sectionFooterHeight = 0.0;		self.tableView.rowHeight = kTableCellHeight;    }	    return self;}- (void)viewDidLoad {    [super viewDidLoad];}- (void)didReceiveMemoryWarning {	// Releases the view if it doesn't have a superview.    [super didReceiveMemoryWarning];		// Release any cached data, images, etc that aren't in use.}- (void)viewDidUnload {	// Release any retained subviews of the main view.	// e.g. self.myOutlet = nil;}#pragma mark -#pragma mark Table view methods- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {    return 1;}// Customize the number of rows in the table view.- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {	ProfileManager *profileManager = [ProfileManager sharedProfileManager];	return [profileManager._levels count];}// Customize the appearance of table view cells.- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {	ProfileManager *profileManager = [ProfileManager sharedProfileManager];		NSString *cellIdentifier;	NSInteger row = [indexPath row];	NSDictionary *levelData = [profileManager getLevelDataForLevel:row];	unsigned moves = [[levelData objectForKey:kGameDataMovesKey] unsignedIntValue];	unsigned leastMoves = [[levelData objectForKey:kGameDataLeastMovesKey] unsignedIntValue];	NSMutableArray *layout = [levelData objectForKey:kGameDataLayoutKey];		if (row < profileManager._nextLevelNum) {		cellIdentifier = [NSString stringWithString:kCellIdentifier];	} else {		cellIdentifier = [NSString stringWithString:kCellIdentifierInactive];	}        MainMenuCell *cell = (MainMenuCell*)[tableView dequeueReusableCellWithIdentifier:cellIdentifier];    if (cell == nil) {        cell = [[[MainMenuCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier] autorelease];	}//	cell.selected = row == profileManager._levelNum;	[cell initializeForLevelNum:row withMoves:moves withLeastMoves:leastMoves withLayout:layout];	    return cell;}- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath {	ProfileManager *profileManager = [ProfileManager sharedProfileManager];	if (profileManager._levelNum == indexPath.row) {		[tableView selectRowAtIndexPath:indexPath animated:NO scrollPosition:UITableViewScrollPositionNone];		cell.selected = YES;	}}- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {	ProfileManager *profileManager = [ProfileManager sharedProfileManager];	NSInteger row = [indexPath row];	if (row < profileManager._nextLevelNum) {		[[NSNotificationCenter defaultCenter] postNotificationName:kNOTIFICATION_PLAYSOUND object:self userInfo:[NSDictionary dictionaryWithObjectsAndKeys:kAudioClick, kNOTIFICATION_PLAYSOUND, [NSNumber numberWithBool:YES], kNOTIFICATION_RESTART, nil]];				profileManager._levelNum = row;		[delegate fadeMainMenu:self];			}}#pragma mark -#pragma mark Memory Release- (void)dealloc {	delegate = nil;	    [super dealloc];}@end