////  LateWormAppDelegate.m//  LateWorm////  Created by Fred Sharples on 11/24/09.//  Copyright __MyCompanyName__ 2009. All rights reserved.//#import "LateWormAppDelegate.h"#import "OpenALPlayer.h"#import "LegalViewController.h"#import "CheatViewController.h"#import "TitleViewController.h"#import "InstructionViewController.h"#import "GardenViewController.h"#import "GameViewController.h"#import "ProfileManager.h"@implementation LateWormAppDelegate@synthesize window;#pragma mark -#pragma mark Application LifeCycle- (void)applicationDidFinishLaunching:(UIApplication *)application {  	// Override point for customization after app launch	[[UIApplication sharedApplication] setStatusBarHidden:YES];		_openALPlayer = [[OpenALPlayer alloc] init];		[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(levelLayoutParsed) name:@"LEVEL_LAYOUT_PARSED" object:nil];		ProfileManager *profileManager = [ProfileManager sharedProfileManager];	[profileManager initializeLayout];		_backgroundImage.alpha = 0.0;		[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(changeStateNotification:) name:kNOTIFICATION_CHANGESTATE object:nil];	    // Override point for customization after application launch    [window makeKeyAndVisible];}- (void) levelLayoutParsed {#ifdef DEBUG	_cheatButton = [UIButton buttonWithType:UIButtonTypeCustom];	_cheatButton.backgroundColor = [UIColor clearColor];	_cheatButton.frame = CGRectMake(0, 0, 40, 40);	[_cheatButton addTarget:self action:@selector(cheat:) forControlEvents:UIControlEventTouchUpInside];	[window addSubview:_cheatButton];#endif	[self changeState:kGameState_Legal];}- (void) applicationWillResignActive:(UIApplication *)application {	ProfileManager *profileManager = [ProfileManager sharedProfileManager];	[profileManager applicationWillResignActive];		_pause = YES;		if (_viewController && [_viewController view] && [[_viewController view] superview]) {		if ([self timedViewState]) {			[_viewController pause:YES];		}	}	}- (void) applicationDidBecomeActive:(UIApplication *)application {	ProfileManager *profileManager = [ProfileManager sharedProfileManager];	[profileManager applicationDidBecomeActive];		if (_pause) {		_pause = NO;				if (_viewController && [_viewController view] && [[_viewController view] superview]) {			if ([self timedViewState]) {				[_viewController pause:NO];			}		}		}}- (void)applicationWillTerminate:(UIApplication *)application {	ProfileManager *profileManager = [ProfileManager sharedProfileManager];	[profileManager applicationWillTerminate];		[UIApplication sharedApplication].idleTimerDisabled = NO;}- (BOOL) timedViewState {	return _state == kGameState_Legal;}#pragma mark -#pragma mark Memory Management#pragma mark -#pragma mark Play Sounds- (void) setSoundLoop:(NSString*)identifier loop:(BOOL)loop {	[_openALPlayer setSoundLoop:identifier loop:loop];}- (BOOL) soundPlaying:(NSString*)identifier {	return [_openALPlayer soundPlaying:identifier];}- (void) fadeSoundIn:(NSString*)identifier {	[_openALPlayer fadeSoundIn:identifier];}- (void) fadeSoundOut:(NSString*)identifier {	[_openALPlayer fadeSoundOut:identifier];}#pragma mark -#pragma mark Cheat- (void) cheat:(id)sender {	[self changeState:kGameState_Cheat];}#pragma mark -#pragma mark State Management- (void) changeStateNotification:(NSNotification*)notification {	NSDictionary *userInfo = [notification userInfo];	unsigned state = [userInfo[kNOTIFICATION_CHANGESTATE] intValue];	[self changeState:state];}- (void) changeState:(unsigned)state {	ProfileManager *profileManager = [ProfileManager sharedProfileManager];		if (_state == kGameState_Garden) {		_backgroundImage.alpha = 0.0;	}		if (_viewController && [_viewController view] && [[_viewController view] superview]) {		[[_viewController view] removeFromSuperview];				_viewController = nil;	}	if (_state == kGameState_MainMenu) {		[[_mainMenuViewController view] removeFromSuperview];				_mainMenuViewController = nil;	}	if (_state == kGameState_Game) {		[[_gameViewController view] removeFromSuperview];				_gameViewController = nil;	}		if (state == kGameState_Legal) {		if (profileManager._savedLevel) {			[self fadeBackgroundIn:YES];			[self changeState:kGameState_Game];						[self setSoundLoop:kAudioMusic loop:YES];			[self fadeSoundIn:kAudioMusic];		} else {			_viewController = [[LegalViewController alloc] init];			[window addSubview:[_viewController view]];		}	} else if (state == kGameState_Title) {		_viewController = [[TitleViewController alloc] init];		[window addSubview:[_viewController view]];			[self setSoundLoop:kAudioMusic loop:YES];		[self fadeSoundIn:kAudioMusic];	} else if (state == kGameState_Cheat) {		[_openALPlayer stopAllSoundsExcept:@""];		_viewController = [[CheatViewController alloc] init];		[window addSubview:[_viewController view]];	} else if (state == kGameState_MainMenu) {		_mainMenuViewController = [[MainMenuViewController alloc] init];		[window addSubview:[_mainMenuViewController view]];		_mainMenuViewController._rootViewController.delegate = self;	} else if (state == kGameState_Instructions) {		[self fadeBackgroundIn:YES];		if (!_viewedInstructions) {			_viewController = [[InstructionViewController alloc] init];			[window addSubview:[_viewController view]];			_viewedInstructions = YES;		} else {			[self changeState:kGameState_Game];		}	} else if (state == kGameState_Game) {		_gameViewController = [[GameViewController alloc] init];		_gameViewController._delegate = self;		[window addSubview:[_gameViewController view]];	} else if (state == kGameState_Garden) {		if (_state != kGameState_Game) {			[self fadeBackgroundIn:YES];		}		_viewController = [[GardenViewController alloc] init];		[window addSubview:[_viewController view]];	}	#ifdef DEBUG	[window bringSubviewToFront:_cheatButton];#endif		_state = state;}- (void) fadeBackgroundIn:(BOOL)flag {	[UIView beginAnimations:nil context:nil];	[UIView setAnimationDuration:kViewFadeTime];	if (flag) {		_backgroundImage.alpha = 1.0;	} else {		_backgroundImage.alpha = 0.0;	}	[UIView commitAnimations];}#pragma mark -#pragma mark TableViewControllerDelegate- (void) fadeMainMenu:(TableViewController*)tableViewController {	[_mainMenuViewController fadeView];}@end